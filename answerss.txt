1 вопрос
Допустим есть файл: hello.html
Hello, World!  <<<начальное содержимое>>> 
<h1>Hello, World!</h1>  <<<изменения>>>

Теперь можно проверить состояние рабочей директории.
git status
Git знает, что файл hello.html был изменен, но при этом эти изменения еще не зафиксированы в репозитории.
сообщение о состоянии дает подсказку о том, что нужно делать дальше. Если нужно добавить эти изменения в репозиторий, есть команда git add. В противном случае используйте команду git restore для отмены изменений.
2 вопрос
Дать команду Git проиндексировать изменения. Проверьте состояние:
git add hello.html
git status

Изменения файла hello.html были проиндексированы. Это означает, что Git теперь знает об изменении, но изменение пока не перманентно (читай, навсегда) записано в репозиторий. Следующий коммит будет включать в себя проиндексированные изменения.
Если нужно решить, что не нужно коммитить изменения, команда состояния напомнит о том, что с помощью команды git restore --staged можно снять индексацию этих изменений.

Отдельный шаг индексации в Git позволяет разделять большие изменения на маленькие коммиты. Аналогия: помыли машину и заодно залили жидкость для очистки стекла — эти два изменения по своей сути независимы, а потому лучше пометить их отдельно. В противном случае, в истории изменений бачка для жидкости очистки стекла будет запись "Помыл машину", что не соответствует сути изменения и может запутать того, кто потом будет разбираться в этой истории.
Разделяя индексацию и коммит, имеем возможность с легкостью настроить, что идет в какой коммит.

